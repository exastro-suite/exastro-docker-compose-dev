#   Copyright 2023 NEC Corporation
#
#   Licensed under the Apache License, Version 2.0 (the "License");
#   you may not use this file except in compliance with the License.
#   You may obtain a copy of the License at
#
#       http://www.apache.org/licenses/LICENSE-2.0
#
#   Unless required by applicable law or agreed to in writing, software
#   distributed under the License is distributed on an "AS IS" BASIS,
#   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#   See the License for the specific language governing permissions and
#   limitations under the License.

version: '3.7'

x-logging: &logging
  driver: json-file
  options:
    max-size: ${LOGGING_MAX_SIZE:-10m}
    max-file: '${LOGGING_MAX_FILE:-10}'

services:
  mariadb:
    image: docker.io/${DB_VENDOR:-mariadb}:${DB_VERSION:-10.11.4}
    container_name: mariadb
    hostname: mariadb
    restart: always
    healthcheck:
      test: /usr/local/bin/healthcheck.sh --su=mysql --connect
      interval: 3s
      retries: 200
    volumes:
      - vol-mariadb-data:/var/lib/mysql
      - ./mariadb/conf/custom.cnf:/etc/mysql/conf.d/custom.cnf
    environment:
      TZ: ${TZ:-Asia/Tokyo}
      MARIADB_ROOT_PASSWORD: ${DB_ADMIN_PASSWORD}
      MYSQL_ROOT_PASSWORD: ${DB_ADMIN_PASSWORD}
    # ports:
    #   - "0.0.0.0:${DB_PORT:-3306}:3306"
    networks:
      - exastro
    profiles:
      - all
      - base
      - mariadb
    logging: *logging

  gitlab:
    image: docker.io/gitlab/gitlab-ce:${GITLAB_VERSION:-15.11.13-ce.0}
    container_name: gitlab
    hostname: gitlab
    restart: always
    healthcheck:
      test: curl -f http://127.0.0.1:40080/-/readiness
      interval: 3s
      retries: 200
    environment:
      TZ: ${TZ:-Asia/Tokyo}
      # Running GitLab in a memory-constrained environment
      # https://docs.gitlab.com/omnibus/settings/memory_constrained_envs.html
      GITLAB_OMNIBUS_CONFIG: |
        postgresql['shared_buffers'] = "2048MB"
        postgresql['work_mem'] = "128MB"
        postgresql['maintenance_work_mem'] = "128MB"
        postgresql['effective_cache_size'] = "128MB"
        postgresql['checkpoint_segments'] = 16
        postgresql['checkpoint_timeout'] = "10min"
        external_url '${GITLAB_EXTERNAL_URL:-http://gitlab:40080}'
        nginx['listen_port'] = 40080
        gitlab_rails['initial_root_password'] = "${GITLAB_ROOT_PASSWORD}"
        gitlab_rails['registry_enabled'] = false;
        gitlab_rails['db_prepared_statements'] = false;
        gitlab_rails['monitoring_whitelist'] = ['0.0.0.0/0']
        # gitlab_rails['env'] = {'MALLOC_CONF' => 'dirty_decay_ms:1000,muzzy_decay_ms:1000'}
        # puma['worker_processes'] = 0
        prometheus_monitoring['enable'] = false
        # sidekiq['max_concurrency'] = 10
        # gitaly['env'] = {'MALLOC_CONF' => 'dirty_decay_ms:1000,muzzy_decay_ms:1000', 'GITALY_COMMAND_SPAWN_MAX_PARALLEL' => '2'}
      GITLAB_POST_RECONFIGURE_SCRIPT: |
        while ! curl -sfI -o /dev/null http://127.0.0.1:40080/-/readiness;
        do
        echo "GitLab service is not ready."
        sleep 1
        done
        echo "GitLab service started normally"
        curl -Ssf -H "PRIVATE-TOKEN: ${GITLAB_ROOT_TOKEN}" "http://127.0.0.1:40080/api/v4/version" || (
          gitlab-rails runner "token = User.find_by_username('root').personal_access_tokens.create(scopes: [:api, :write_repository, :sudo], name: 'exastro system token'); token.set_token('${GITLAB_ROOT_TOKEN}'); token.save!"
        )
        echo "GitLab post reconfigure script ended."
    ports:
      - "0.0.0.0:${GITLAB_PORT:-40080}:40080"
    volumes:
      - vol-gitlab-config:/etc/gitlab
      - vol-gitlab-logs:/var/log/gitlab
      - vol-gitlab-data:/var/opt/gitlab
    shm_size: '256m'
    networks:
      - exastro
    profiles:
      - all
      - gitlab
    logging: *logging

  mongo:
    image: docker.io/mongo:${MONGO_VERSION:-6.0.7}
    container_name: mongo
    hostname: mongo
    restart: always
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongosh mongodb://127.0.0.1:27017/test || exit 1
      interval: 3s
      retries: 200
    volumes:
      - vol-mongo-data:/data/db
      # - ./mongo/conf/mongod.conf:/etc/mongodb/conf/mongod.conf
    environment:
      TZ: ${TZ:-Asia/Tokyo}
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_INITDB_ROOT_USERNAME:-adminer}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_INITDB_ROOT_PASSWORD}
    # ports:
    #   - "0.0.0.0:${MONGO_PORT:-27017}:27017"
    networks:
      - exastro
    profiles:
      - all
      - mongo
    logging: *logging

  keycloak:
    image: docker.io/exastro/keycloak:${PLATFORM_VERSION:-1.9.0}
    container_name: keycloak
    hostname: keycloak
    restart: always
    environment:
      KEYCLOAK_ADMIN: ${SYSTEM_ADMIN:-admin}
      KEYCLOAK_ADMIN_PASSWORD: ${SYSTEM_ADMIN_PASSWORD}
      TZ: ${TZ:-Asia/Tokyo}
      HTTP_PROXY: ${HTTP_PROXY}
      http_proxy: ${HTTP_PROXY}
      HTTPS_PROXY: ${HTTPS_PROXY}
      https_proxy: ${HTTPS_PROXY}
      NO_PROXY: localhost,127.0.0.1,${NO_PROXY}
      no_proxy: localhost,127.0.0.1,${NO_PROXY}
      KC_DB: ${KEYCLOAK_DB_VENDOR:-mariadb}
      KC_DB_URL_HOST: ${KEYCLOAK_DB_HOST:-mariadb}
      KC_DB_URL_PORT: ${KEYCLOAK_DB_PORT:-3306}
      KC_DB_URL_DATABASE: ${KEYCLOAK_DB_DATABASE:-keycloak}
      KC_DB_USERNAME: ${KEYCLOAK_DB_USER:-keycloak}
      KC_DB_PASSWORD: ${KEYCLOAK_DB_PASSWORD}
      JAVA_OPTS_APPEND: ${KEYCLOAK_JAVA_OPTS_APPEND:--Xms256m -Xmx256m}
    command:
      - start
    networks:
      - exastro
    depends_on:
      platform-migration-1:
        condition: service_completed_successfully
    profiles:
      - all
      - minimal
      - base
      - keycloak
    logging: *logging

  platform-auth:
    image: docker.io/exastro/exastro-platform-auth:${PLATFORM_VERSION:-1.9.0}
    container_name: platform-auth
    hostname: platform-auth
    restart: always
    user: ${UID:-1000}:${HOST_DOCKER_GID:-1000}
    environment:
      EXTERNAL_URL: ${EXASTRO_EXTERNAL_URL:?Exastro service URL is required.}
      EXTERNAL_URL_MNG: ${EXASTRO_MNG_EXTERNAL_URL:?Exastro management service URL is required.}
      EXASTRO_HTTPS: ${EXASTRO_HTTPS:-false}
      CERTIFICATE_FILE: ${CERTIFICATE_FILE:-exastro.crt}
      PRIVATE_KEY_FILE: ${PRIVATE_KEY_FILE:-exastro.key}
      TZ: ${TZ:-Asia/Tokyo}
      DEFAULT_LANGUAGE: ${DEFAULT_LANGUAGE:-ja}
      LANGUAGE: ${LANGUAGE:-en}
      ENCRYPT_KEY: ${ENCRYPT_KEY}
      PYTHONIOENCODING: utf-8
      LISTEN_PORT: 8000
      LISTEN_PORT_PF_MNG: 8001
      ITA_API_ADMIN_PROTOCOL: ${ITA_API_ADMIN_PROTOCOL:-http}
      ITA_API_ADMIN_HOST: ${ITA_API_ADMIN_HOST:-ita-api-admin}
      ITA_API_ADMIN_PORT: ${ITA_API_ADMIN_PORT:-8080}
      ITA_API_PROTOCOL: ${ITA_API_PROTOCOL:-http}
      ITA_API_HOST: ${ITA_API_HOST:-ita-api-organization}
      ITA_API_PORT: ${ITA_API_PORT:-8080}
      ITA_WEB_PROTOCOL: ${ITA_WEB_PROTOCOL:-http}
      ITA_WEB_HOST: ${ITA_WEB_HOST:-ita-web-server}
      ITA_WEB_PORT: ${ITA_WEB_PORT:-8000}
      ITA_API_OASE_RECEIVER_PROTOCOL: ${ITA_API_OASE_RECEIVER_PROTOCOL:-http}
      ITA_API_OASE_RECEIVER_HOST: ${ITA_API_OASE_RECEIVER_HOST:-ita-api-oase-receiver}
      ITA_API_OASE_RECEIVER_PORT: ${ITA_API_OASE_RECEIVER_PORT:-8000}
      ITA_API_ANSIBLE_EXECUTION_RECEIVER_PROTOCOL: ${ITA_API_ANSIBLE_EXECUTION_RECEIVER_PROTOCOL:-http}
      ITA_API_ANSIBLE_EXECUTION_RECEIVER_HOST: ${ITA_API_ANSIBLE_EXECUTION_RECEIVER_HOST:-ita-api-ansible-execution-receiver}
      ITA_API_ANSIBLE_EXECUTION_RECEIVER_PORT: ${ITA_API_ANSIBLE_EXECUTION_RECEIVER_PORT:-8000}
      API_KEYCLOAK_PROTOCOL: ${API_KEYCLOAK_PROTOCOL:-http}
      API_KEYCLOAK_HOST: ${API_KEYCLOAK_HOST:-keycloak}
      API_KEYCLOAK_PORT: ${API_KEYCLOAK_PORT:-8080}
      KEYCLOAK_PROTOCOL: ${KEYCLOAK_PROTOCOL:-http}
      KEYCLOAK_HOST: ${KEYCLOAK_HOST:-keycloak}
      KEYCLOAK_PORT: ${KEYCLOAK_PORT:-8080}
      KEYCLOAK_MASTER_REALM: ${KEYCLOAK_MASTER_REALM:-Master}
      PLATFORM_API_PROTOCOL: ${PLATFORM_API_PROTOCOL:-http}
      PLATFORM_API_HOST: ${PLATFORM_API_HOST:-platform-api}
      PLATFORM_API_PORT: ${PLATFORM_API_PORT:-8000}
      PLATFORM_WEB_PROTOCOL: ${PLATFORM_WEB_PROTOCOL:-http}
      PLATFORM_WEB_HOST: ${PLATFORM_WEB_HOST:-platform-web}
      PLATFORM_WEB_PORT: ${PLATFORM_WEB_PORT:-8000}
      PLATFORM_AUTH_PROTOCOL: ${PLATFORM_AUTH_PROTOCOL:-http}
      PLATFORM_AUTH_HOST: ${PLATFORM_AUTH_HOST:-platform-auth}
      PLATFORM_AUTH_PORT: ${PLATFORM_AUTH_PORT:-8000}
      DB_VENDOR: ${PLATFORM_DB_VENDOR:-mariadb}
      DB_HOST: ${PLATFORM_DB_HOST:-mariadb}
      DB_PORT: ${PLATFORM_DB_PORT:-3306}
      DB_DATABASE: ${PLATFORM_DB_DATABASE:-platform}
      DB_ADMIN_USER: ${PLATFORM_DB_ADMIN_USER:-root}
      DB_ADMIN_PASSWORD: ${PLATFORM_DB_ADMIN_PASSWORD}
      DB_USER: ${PLATFORM_DB_USER:-app_user}
      DB_PASSWORD: ${PLATFORM_DB_PASSWORD}
      AUDIT_LOG_ENABLED: ${AUDIT_LOG_ENABLED:-True}
      AUDIT_LOG_PATH: ${AUDIT_LOG_PATH:-exastro-audit.log}
      AUDIT_LOG_FILE_MAX_BYTE: ${AUDIT_LOG_FILE_MAX_BYTE:-100000000}
      AUDIT_LOG_BACKUP_COUNT: ${AUDIT_LOG_BACKUP_COUNT:-30}
    ports:
      - "0.0.0.0:${EXTERNAL_URL_PORT:-80}:8000"
      - "0.0.0.0:${EXTERNAL_URL_MNG_PORT:-81}:8001"
    volumes:
      - vol-exastro-log:/var/log/exastro
      - vol-exastro-ssl:/etc/ssl/certs/exastro
    networks:
      - exastro
    depends_on:
      platform-migration-2:
        condition: service_completed_successfully
    profiles:
      - all
      - minimal
      - base
      - web
      - platform
    logging: *logging

  platform-web:
    image: docker.io/exastro/exastro-platform-web:${PLATFORM_VERSION:-1.9.0}
    container_name: platform-web
    hostname: platform-web
    restart: always
    environment:
      TZ: ${TZ:-Asia/Tokyo}
      DEFAULT_LANGUAGE: ${DEFAULT_LANGUAGE:-ja}
      LANGUAGE: ${LANGUAGE:-en}
      PYTHONIOENCODING: utf-8
      LISTEN_PORT: 8000
      ITA_API_ADMIN_PROTOCOL: ${ITA_API_ADMIN_PROTOCOL:-http}
      ITA_API_ADMIN_HOST: ${ITA_API_ADMIN_HOST:-ita-api-admin}
      ITA_API_ADMIN_PORT: ${ITA_API_ADMIN_PORT:-8080}
      ITA_API_PROTOCOL: ${ITA_API_PROTOCOL:-http}
      ITA_API_HOST: ${ITA_API_HOST:-ita-api-organization}
      ITA_API_PORT: ${ITA_API_PORT:-8080}
      ITA_WEB_PROTOCOL: ${ITA_WEB_PROTOCOL:-http}
      ITA_WEB_HOST: ${ITA_WEB_HOST:-ita-web-server}
      ITA_WEB_PORT: ${ITA_WEB_PORT:-8000}
      API_KEYCLOAK_PROTOCOL: ${API_KEYCLOAK_PROTOCOL:-http}
      API_KEYCLOAK_HOST: ${API_KEYCLOAK_HOST:-keycloak}
      API_KEYCLOAK_PORT: ${API_KEYCLOAK_PORT:-8080}
      KEYCLOAK_PROTOCOL: ${KEYCLOAK_PROTOCOL:-http}
      KEYCLOAK_HOST: ${KEYCLOAK_HOST:-keycloak}
      KEYCLOAK_PORT: ${KEYCLOAK_PORT:-8080}
      KEYCLOAK_MASTER_REALM: ${KEYCLOAK_MASTER_REALM:-Master}
      PLATFORM_API_PROTOCOL: ${PLATFORM_API_PROTOCOL:-http}
      PLATFORM_API_HOST: ${PLATFORM_API_HOST:-platform-api}
      PLATFORM_API_PORT: ${PLATFORM_API_PORT:-8000}
      PLATFORM_WEB_PROTOCOL: ${PLATFORM_WEB_PROTOCOL:-http}
      PLATFORM_WEB_HOST: ${PLATFORM_WEB_HOST:-platform-web}
      PLATFORM_WEB_PORT: ${PLATFORM_WEB_PORT:-8000}
      DB_VENDOR: ${PLATFORM_DB_VENDOR:-mariadb}
      DB_HOST: ${PLATFORM_DB_HOST:-mariadb}
      DB_PORT: ${PLATFORM_DB_PORT:-3306}
      DB_DATABASE: ${PLATFORM_DB_DATABASE:-platform}
      DB_ADMIN_USER: ${PLATFORM_DB_ADMIN_USER:-root}
      DB_ADMIN_PASSWORD: ${PLATFORM_DB_ADMIN_PASSWORD}
      DB_USER: ${PLATFORM_DB_USER:-app_user}
      DB_PASSWORD: ${PLATFORM_DB_PASSWORD}
    networks:
      - exastro
    profiles:
      - all
      - minimal
      - base
      - web
      - platform
    logging: *logging

  platform-api:
    image: docker.io/exastro/exastro-platform-api:${PLATFORM_VERSION:-1.9.0}
    container_name: platform-api
    hostname: platform-api
    restart: always
    user: ${UID:-1000}:${HOST_DOCKER_GID:-1000}
    healthcheck:
      test: curl -f http://127.0.0.1:8000/internal-api/health-check/liveness
      interval: 3s
      retries: 200
    environment:
      TZ: ${TZ:-Asia/Tokyo}
      DEFAULT_LANGUAGE: ${DEFAULT_LANGUAGE:-ja}
      LANGUAGE: ${LANGUAGE:-en}
      ENCRYPT_KEY: ${ENCRYPT_KEY}
      PYTHONIOENCODING: utf-8
      LISTEN_PORT: 8000
      ITA_API_ADMIN_PROTOCOL: ${ITA_API_ADMIN_PROTOCOL:-http}
      ITA_API_ADMIN_HOST: ${ITA_API_ADMIN_HOST:-ita-api-admin}
      ITA_API_ADMIN_PORT: ${ITA_API_ADMIN_PORT:-8080}
      ITA_API_PROTOCOL: ${ITA_API_PROTOCOL:-http}
      ITA_API_HOST: ${ITA_API_HOST:-ita-api-organization}
      ITA_API_PORT: ${ITA_API_PORT:-8080}
      ITA_WEB_PROTOCOL: ${ITA_WEB_PROTOCOL:-http}
      ITA_WEB_HOST: ${ITA_WEB_HOST:-ita-web-server}
      ITA_WEB_PORT: ${ITA_WEB_PORT:-8000}
      API_KEYCLOAK_PROTOCOL: ${API_KEYCLOAK_PROTOCOL:-http}
      API_KEYCLOAK_HOST: ${API_KEYCLOAK_HOST:-keycloak}
      API_KEYCLOAK_PORT: ${API_KEYCLOAK_PORT:-8080}
      KEYCLOAK_PROTOCOL: ${KEYCLOAK_PROTOCOL:-http}
      KEYCLOAK_HOST: ${KEYCLOAK_HOST:-keycloak}
      KEYCLOAK_PORT: ${KEYCLOAK_PORT:-8080}
      KEYCLOAK_MASTER_REALM: ${KEYCLOAK_MASTER_REALM:-Master}
      PLATFORM_API_PROTOCOL: ${PLATFORM_API_PROTOCOL:-http}
      PLATFORM_API_HOST: ${PLATFORM_API_HOST:-platform-api}
      PLATFORM_API_PORT: ${PLATFORM_API_PORT:-8000}
      PLATFORM_WEB_PROTOCOL: ${PLATFORM_WEB_PROTOCOL:-http}
      PLATFORM_WEB_HOST: ${PLATFORM_WEB_HOST:-platform-web}
      PLATFORM_WEB_PORT: ${PLATFORM_WEB_PORT:-8000}
      DB_VENDOR: ${PLATFORM_DB_VENDOR:-mariadb}
      DB_HOST: ${PLATFORM_DB_HOST:-mariadb}
      DB_PORT: ${PLATFORM_DB_PORT:-3306}
      DB_DATABASE: ${PLATFORM_DB_DATABASE:-platform}
      DB_ADMIN_USER: ${PLATFORM_DB_ADMIN_USER:-root}
      DB_ADMIN_PASSWORD: ${PLATFORM_DB_ADMIN_PASSWORD}
      DB_USER: ${PLATFORM_DB_USER:-app_user}
      DB_PASSWORD: ${PLATFORM_DB_PASSWORD}
    networks:
      - exastro
    profiles:
      - all
      - minimal
      - base
      - web
      - platform
    logging: *logging

  platform-job:
    image: docker.io/exastro/exastro-platform-job:${PLATFORM_VERSION:-1.9.0}
    container_name: platform-job
    hostname: platform-job
    restart: always
    user: ${UID:-1000}:${HOST_DOCKER_GID:-1000}
    environment:
      TZ: ${TZ:-Asia/Tokyo}
      DEFAULT_LANGUAGE: ${DEFAULT_LANGUAGE:-ja}
      LANGUAGE: ${LANGUAGE:-en}
      ENCRYPT_KEY: ${ENCRYPT_KEY}
      PYTHONIOENCODING: utf-8
      DB_VENDOR: ${PLATFORM_DB_VENDOR:-mariadb}
      DB_HOST: ${PLATFORM_DB_HOST:-mariadb}
      DB_PORT: ${PLATFORM_DB_PORT:-3306}
      DB_DATABASE: ${PLATFORM_DB_DATABASE:-platform}
      DB_USER: ${PLATFORM_DB_USER:-app_user}
      DB_PASSWORD: ${PLATFORM_DB_PASSWORD}
      API_KEYCLOAK_PROTOCOL: ${API_KEYCLOAK_PROTOCOL:-http}
      API_KEYCLOAK_HOST: ${API_KEYCLOAK_HOST:-keycloak}
      API_KEYCLOAK_PORT: ${API_KEYCLOAK_PORT:-8080}
      # SUB_PROCESS_TERMINATE_REQUEST_SECONDS: ${SUB_PROCESS_TERMINATE_REQUEST_SECONDS:-7200}
      # SUB_PROCESS_ACCEPTABLE: ${SUB_PROCESS_ACCEPTABLE:-2}
      # SUB_PROCESS_MAX_JOBS: ${SUB_PROCESS_MAX_JOBS:-10}
      # SUB_PROCESS_WATCH_INTERVAL_SECONDS: ${SUB_PROCESS_WATCH_INTERVAL_SECONDS:-1.0}
      # SUB_PROCESS_DB_RECONNECT_INTERVAL_SECONDS: ${SUB_PROCESS_DB_RECONNECT_INTERVAL_SECONDS:-60}
      # SUB_PROCESS_DB_HEALTH_CHECK_INTERVAL_SECONDS: ${SUB_PROCESS_DB_HEALTH_CHECK_INTERVAL_SECONDS:-5}
      # SUB_PROCESS_MAX_CANCEL_TIMEOUT: ${SUB_PROCESS_MAX_CANCEL_TIMEOUT:-10}
      # JOB_STATUS_WATCH_INTERVAL_SECONDS: ${JOB_STATUS_WATCH_INTERVAL_SECONDS:-1.0}
      # JOB_CANCEL_TIMEOUT_SECONDS: ${JOB_CANCEL_TIMEOUT_SECONDS:-5.0}
      # KEYCLOAK_TOKEN_REFRESH_INTERVAL_SECONDS: ${KEYCLOAK_TOKEN_REFRESH_INTERVAL_SECONDS:-30}
      # JOB_NOTIFICATION_TIMEOUT_SECONDS: ${JOB_NOTIFICATION_TIMEOUT_SECONDS:-20}
      # JOB_NOTIFICATION_TEAMS_CONNECTION_TIMEOUT: ${JOB_NOTIFICATION_TEAMS_CONNECTION_TIMEOUT:-3.0}
      # JOB_NOTIFICATION_TEAMS_READ_TIMEOUT: ${JOB_NOTIFICATION_TEAMS_READ_TIMEOUT:-10.0}
      # JOB_NOTIFICATION_SMTP_TIMEOUT: ${JOB_NOTIFICATION_SMTP_TIMEOUT:10.0}
      # JOB_NOTIFICATION_SMTPS_SSL_VERIFY_ENABLED: ${JOB_NOTIFICATION_SMTPS_SSL_VERIFY_ENABLED:-TRUE}
      # JOB_USER_IMPORT_TIMEOUT_SECONDS: ${JOB_USER_IMPORT_TIMEOUT_SECONDS:-3600}
      # JOB_USER_IMPORT_MAX_JOB_PER_PROCESS: ${JOB_USER_IMPORT_MAX_JOB_PER_PROCESS:-2}
      # JOB_USER_IMPORT_MAX_ROWS_ALLOWD: ${JOB_USER_IMPORT_MAX_ROWS_ALLOWD:-20000}
      # JOB_USER_IMPORT_MAX_COLS_ALLOWD: ${JOB_USER_IMPORT_MAX_COLS_ALLOWD:-20}
      # JOB_USER_IMPORT_WAIT_MILLISECONDS: ${JOB_USER_IMPORT_WAIT_MILLISECONDS:-10}
      # JOB_USER_IMPORT_UPDATE_COUNT_INTERVAL: ${JOB_USER_IMPORT_UPDATE_COUNT_INTERVAL:-100}
      # JOB_USER_IMPORT_XL_BUFFERED_ROWS: ${JOB_USER_IMPORT_XL_BUFFERED_ROWS:-100}
      # JOB_FORCE_UPDATE_STATUS_INTERVAL_SECONDS: ${JOB_FORCE_UPDATE_STATUS_INTERVAL_SECONDS:-180}
      # JOB_FORCE_UPDATE_STATUS_PROGRASS_SECONDS: ${JOB_FORCE_UPDATE_STATUS_PROGRASS_SECONDS:-600}
      # JOB_FORCE_UPDATE_STATUS_TIMEOUT_SECONDS: ${JOB_FORCE_UPDATE_STATUS_TIMEOUT_SECONDS:-60}
    networks:
      - exastro
    profiles:
      - all
      - minimal
      - base
      - backyard
      - ita
      - platform
    logging: *logging

  platform-migration-1:
    image: docker.io/exastro/exastro-platform-migration:${PLATFORM_VERSION:-1.9.0}
    container_name: platform-migration-1
    hostname: platform-migration-1
    command: python3 /app/initialize_db_main.py
    user: ${UID:-1000}:${HOST_DOCKER_GID:-1000}
    environment:
      TZ: ${TZ:-Asia/Tokyo}
      DEFAULT_LANGUAGE: ${DEFAULT_LANGUAGE:-ja}
      LANGUAGE: ${LANGUAGE:-en}
      ENCRYPT_KEY: ${ENCRYPT_KEY}
      PYTHONIOENCODING: utf-8
      ITA_API_ADMIN_PROTOCOL: ${ITA_API_ADMIN_PROTOCOL:-http}
      ITA_API_ADMIN_HOST: ${ITA_API_ADMIN_HOST:-ita-api-admin}
      ITA_API_ADMIN_PORT: ${ITA_API_ADMIN_PORT:-8080}
      ITA_API_PROTOCOL: ${ITA_API_PROTOCOL:-http}
      ITA_API_HOST: ${ITA_API_HOST:-ita-api-organization}
      ITA_API_PORT: ${ITA_API_PORT:-8080}
      ITA_WEB_PROTOCOL: ${ITA_WEB_PROTOCOL:-http}
      ITA_WEB_HOST: ${ITA_WEB_HOST:-ita-web-server}
      ITA_WEB_PORT: ${ITA_WEB_PORT:-8000}
      KEYCLOAK_DB_DATABASE: ${KEYCLOAK_DB_DATABASE:-keycloak}
      KEYCLOAK_DB_PASSWORD: ${KEYCLOAK_DB_PASSWORD}
      KEYCLOAK_DB_USER: ${KEYCLOAK_DB_USER:-keycloak}
      KEYCLOAK_PROTOCOL: ${KEYCLOAK_PROTOCOL:-http}
      KEYCLOAK_HOST: ${KEYCLOAK_HOST:-keycloak}
      KEYCLOAK_PORT: ${KEYCLOAK_PORT:-8080}
      KEYCLOAK_MASTER_REALM: ${KEYCLOAK_MASTER_REALM:-Master}
      KEYCLOAK_USER: ${SYSTEM_ADMIN:-admin}
      KEYCLOAK_PASSWORD: ${SYSTEM_ADMIN_PASSWORD}
      PLATFORM_API_PROTOCOL: ${PLATFORM_API_PROTOCOL:-http}
      PLATFORM_API_HOST: ${PLATFORM_API_HOST:-platform-api}
      PLATFORM_API_PORT: ${PLATFORM_API_PORT:-8000}
      PLATFORM_WEB_PROTOCOL: ${PLATFORM_WEB_PROTOCOL:-http}
      PLATFORM_WEB_HOST: ${PLATFORM_WEB_HOST:-platform-web}
      PLATFORM_WEB_PORT: ${PLATFORM_WEB_PORT:-8000}
      DB_VENDOR: ${PLATFORM_DB_VENDOR:-mariadb}
      DB_HOST: ${PLATFORM_DB_HOST:-mariadb}
      DB_PORT: ${PLATFORM_DB_PORT:-3306}
      DB_DATABASE: ${PLATFORM_DB_DATABASE:-platform}
      DB_ADMIN_USER: ${PLATFORM_DB_ADMIN_USER:-root}
      DB_ADMIN_PASSWORD: ${PLATFORM_DB_ADMIN_PASSWORD}
      DB_USER: ${PLATFORM_DB_USER:-app_user}
      DB_PASSWORD: ${PLATFORM_DB_PASSWORD}
    networks:
      - exastro
    depends_on:
      mariadb:
        condition: service_healthy
    profiles:
      - all
      - minimal
      - base
      - migration
      - platform
    logging: *logging

  platform-migration-2:
    image: docker.io/exastro/exastro-platform-migration:${PLATFORM_VERSION:-1.9.0}
    container_name: platform-migration-2
    hostname: platform-migration-2
    command: python3 /app/migration_main.py
    user: ${UID:-1000}:${HOST_DOCKER_GID:-1000}
    environment:
      TZ: ${TZ:-Asia/Tokyo}
      DEFAULT_LANGUAGE: ${DEFAULT_LANGUAGE:-ja}
      LANGUAGE: ${LANGUAGE:-en}
      ENCRYPT_KEY: ${ENCRYPT_KEY}
      PYTHONIOENCODING: utf-8
      ITA_API_ADMIN_PROTOCOL: ${ITA_API_ADMIN_PROTOCOL:-http}
      ITA_API_ADMIN_HOST: ${ITA_API_ADMIN_HOST:-ita-api-admin}
      ITA_API_ADMIN_PORT: ${ITA_API_ADMIN_PORT:-8080}
      ITA_API_PROTOCOL: ${ITA_API_PROTOCOL:-http}
      ITA_API_HOST: ${ITA_API_HOST:-ita-api-organization}
      ITA_API_PORT: ${ITA_API_PORT:-8080}
      ITA_WEB_PROTOCOL: ${ITA_WEB_PROTOCOL:-http}
      ITA_WEB_HOST: ${ITA_WEB_HOST:-ita-web-server}
      ITA_WEB_PORT: ${ITA_WEB_PORT:-8000}
      API_KEYCLOAK_PROTOCOL: ${API_KEYCLOAK_PROTOCOL:-http}
      API_KEYCLOAK_HOST: ${API_KEYCLOAK_HOST:-keycloak}
      API_KEYCLOAK_PORT: ${API_KEYCLOAK_PORT:-8080}
      KEYCLOAK_DB_DATABASE: ${KEYCLOAK_DB_DATABASE:-keycloak}
      KEYCLOAK_DB_PASSWORD: ${KEYCLOAK_DB_PASSWORD}
      KEYCLOAK_DB_USER: ${KEYCLOAK_DB_USER:-keycloak}
      KEYCLOAK_HOST: ${KEYCLOAK_HOST:-keycloak}
      KEYCLOAK_MASTER_REALM: ${KEYCLOAK_MASTER_REALM:-Master}
      KEYCLOAK_PORT: ${KEYCLOAK_PORT:-8080}
      KEYCLOAK_PROTOCOL: ${KEYCLOAK_PROTOCOL:-http}
      KEYCLOAK_USER: ${SYSTEM_ADMIN:-admin}
      KEYCLOAK_PASSWORD: ${SYSTEM_ADMIN_PASSWORD}
      PLATFORM_API_PROTOCOL: ${PLATFORM_API_PROTOCOL:-http}
      PLATFORM_API_HOST: ${PLATFORM_API_HOST:-platform-api}
      PLATFORM_API_PORT: ${PLATFORM_API_PORT:-8000}
      PLATFORM_WEB_PROTOCOL: ${PLATFORM_WEB_PROTOCOL:-http}
      PLATFORM_WEB_HOST: ${PLATFORM_WEB_HOST:-platform-web}
      PLATFORM_WEB_PORT: ${PLATFORM_WEB_PORT:-8000}
      DB_VENDOR: ${PLATFORM_DB_VENDOR:-mariadb}
      DB_HOST: ${PLATFORM_DB_HOST:-mariadb}
      DB_PORT: ${PLATFORM_DB_PORT:-3306}
      DB_DATABASE: ${PLATFORM_DB_DATABASE:-platform}
      DB_ADMIN_USER: ${PLATFORM_DB_ADMIN_USER:-root}
      DB_ADMIN_PASSWORD: ${PLATFORM_DB_ADMIN_PASSWORD}
      DB_USER: ${PLATFORM_DB_USER:-app_user}
      DB_PASSWORD: ${PLATFORM_DB_PASSWORD}
    networks:
      - exastro
    depends_on:
      platform-migration-1:
        condition: service_completed_successfully
    profiles:
      - all
      - minimal
      - base
      - migration
      - platform
    logging: *logging

  ita-api-organization:
    image: docker.io/exastro/exastro-it-automation-api-organization:${ITA_VERSION:-2.5.1}
    container_name: ita-api-organization
    hostname: ita-api-organization
    restart: always
    user: ${UID:-1000}:${HOST_DOCKER_GID:-1000}
    environment:
      TZ: ${TZ:-Asia/Tokyo}
      DEFAULT_LANGUAGE: ${DEFAULT_LANGUAGE:-ja}
      LANGUAGE: ${LANGUAGE:-en}
      ENCRYPT_KEY: ${ENCRYPT_KEY}
      APACHE_USERNAME: "#${UID:-1000}"
      APACHE_GROUPNAME: "#${HOST_DOCKER_GID:-1000}"
      DB_VENDOR: ${ITA_DB_VENDOR:-mariadb}
      DB_HOST: ${ITA_DB_HOST:-mariadb}
      DB_PORT: ${ITA_DB_PORT:-3306}
      DB_DATABASE: ${ITA_DB_DATABASE:-ITA_DB}
      DB_ADMIN_USER: ${ITA_DB_ADMIN_USER:-root}
      DB_ADMIN_PASSWORD: ${ITA_DB_ADMIN_PASSWORD}
      DB_USER: ${ITA_DB_USER:-ITA_USER}
      DB_PASSWORD: ${ITA_DB_PASSWORD}
      PLATFORM_API_HOST: ${PLATFORM_API_HOST:-platform-api}
      PLATFORM_API_PORT: ${PLATFORM_API_PORT:-8000}
      MONGO_OPTION_SSL: ${MONGO_OPTION_SSL:-FALSE}
      MONGO_SCHEME: ${MONGO_SCHEME:-mongodb}
      MONGO_HOST: ${MONGO_HOST}
      MONGO_PORT: ${MONGO_PORT:-27017}
      CONTAINER_BASE: docker
      STORAGEPATH: /storage/
      LISTEN_PORT: 8080
    volumes:
      - vol-ita-storage:/storage
    networks:
      - exastro
    profiles:
      - all
      - minimal
      - base
      - web
      - ita
    logging: *logging

  ita-api-admin:
    image: docker.io/exastro/exastro-it-automation-api-admin:${ITA_VERSION:-2.5.1}
    container_name: ita-api-admin
    hostname: ita-api-admin
    restart: always
    user: ${UID:-1000}:${HOST_DOCKER_GID:-1000}
    environment:
      TZ: ${TZ:-Asia/Tokyo}
      DEFAULT_LANGUAGE: ${DEFAULT_LANGUAGE:-ja}
      LANGUAGE: ${LANGUAGE:-en}
      ENCRYPT_KEY: ${ENCRYPT_KEY}
      APACHE_USERNAME: "#${UID:-1000}"
      APACHE_GROUPNAME: "#${HOST_DOCKER_GID:-1000}"
      DB_VENDOR: ${ITA_DB_VENDOR:-mariadb}
      DB_HOST: ${ITA_DB_HOST:-mariadb}
      DB_PORT: ${ITA_DB_PORT:-3306}
      DB_DATABASE: ${ITA_DB_DATABASE:-ITA_DB}
      DB_ADMIN_USER: ${ITA_DB_ADMIN_USER:-root}
      DB_ADMIN_PASSWORD: ${ITA_DB_ADMIN_PASSWORD}
      DB_USER: ${ITA_DB_USER:-ITA_USER}
      DB_PASSWORD: ${ITA_DB_PASSWORD}
      GITLAB_PROTOCOL: ${GITLAB_PROTOCOL:-http}
      GITLAB_HOST: ${GITLAB_HOST:-}
      GITLAB_PORT: ${GITLAB_PORT:-40080}
      GITLAB_ROOT_TOKEN: ${GITLAB_ROOT_TOKEN}
      PLATFORM_API_HOST: ${PLATFORM_API_HOST:-platform-api}
      PLATFORM_API_PORT: ${PLATFORM_API_PORT:-8000}
      MONGO_OPTION_SSL: ${MONGO_OPTION_SSL:-FALSE}
      MONGO_SCHEME: ${MONGO_SCHEME:-mongodb}
      MONGO_HOST: ${MONGO_HOST}
      MONGO_PORT: ${MONGO_PORT:-27017}
      MONGO_ADMIN_USER: ${MONGO_ADMIN_USER:-adminer}
      MONGO_ADMIN_PASSWORD: ${MONGO_ADMIN_PASSWORD}
      CONTAINER_BASE: docker
      STORAGEPATH: /storage/
      LISTEN_PORT: 8080
    volumes:
      - vol-ita-storage:/storage
    networks:
      - exastro
    profiles:
      - all
      - minimal
      - base
      - web
      - ita
    logging: *logging

  ita-api-oase-receiver:
    image: docker.io/exastro/exastro-it-automation-api-oase-receiver:${ITA_VERSION:-2.5.1}
    container_name: ita-api-oase-receiver
    hostname: ita-api-oase-receiver
    restart: always
    user: ${UID:-1000}:${HOST_DOCKER_GID:-1000}
    environment:
      TZ: ${TZ:-Asia/Tokyo}
      DEFAULT_LANGUAGE: ${DEFAULT_LANGUAGE:-ja}
      LANGUAGE: ${LANGUAGE:-en}
      ENCRYPT_KEY: ${ENCRYPT_KEY}
      APACHE_USERNAME: "#${UID:-1000}"
      APACHE_GROUPNAME: "#${HOST_DOCKER_GID:-1000}"
      DB_VENDOR: ${ITA_DB_VENDOR:-mariadb}
      DB_HOST: ${ITA_DB_HOST:-mariadb}
      DB_PORT: ${ITA_DB_PORT:-3306}
      DB_DATABASE: ${ITA_DB_DATABASE:-ITA_DB}
      DB_ADMIN_USER: ${ITA_DB_ADMIN_USER:-root}
      DB_ADMIN_PASSWORD: ${ITA_DB_ADMIN_PASSWORD}
      DB_USER: ${ITA_DB_USER:-ITA_USER}
      DB_PASSWORD: ${ITA_DB_PASSWORD}
      MONGO_OPTION_SSL: ${MONGO_OPTION_SSL:-FALSE}
      MONGO_SCHEME: ${MONGO_SCHEME:-mongodb}
      MONGO_HOST: ${MONGO_HOST}
      MONGO_PORT: ${MONGO_PORT:-27017}
      PLATFORM_API_HOST: ${PLATFORM_API_HOST:-platform-api}
      PLATFORM_API_PORT: ${PLATFORM_API_PORT:-8000}
      CONTAINER_BASE: docker
      STORAGEPATH: /storage/
      LISTEN_PORT: 8000
    networks:
      - exastro
    profiles:
      - all
      - minimal
      - base
      - web
      - ita
    logging: *logging

  ita-api-ansible-execution-receiver:
    image: docker.io/exastro/exastro-it-automation-api-ansible-execution-receiver:${ITA_VERSION:-2.5.1}
    container_name: ita-api-ansible-execution-receiver
    hostname: ita-api-ansible-execution-receiver
    restart: always
    user: ${UID:-1000}:${HOST_DOCKER_GID:-1000}
    environment:
      TZ: ${TZ:-Asia/Tokyo}
      DEFAULT_LANGUAGE: ${DEFAULT_LANGUAGE:-ja}
      LANGUAGE: ${LANGUAGE:-en}
      ENCRYPT_KEY: ${ENCRYPT_KEY}
      APACHE_USERNAME: "#${UID:-1000}"
      APACHE_GROUPNAME: "#${HOST_DOCKER_GID:-1000}"
      DB_VENDOR: ${ITA_DB_VENDOR:-mariadb}
      DB_HOST: ${ITA_DB_HOST:-mariadb}
      DB_PORT: ${ITA_DB_PORT:-3306}
      DB_DATABASE: ${ITA_DB_DATABASE:-ITA_DB}
      DB_ADMIN_USER: ${ITA_DB_ADMIN_USER:-root}
      DB_ADMIN_PASSWORD: ${ITA_DB_ADMIN_PASSWORD}
      DB_USER: ${ITA_DB_USER:-ITA_USER}
      DB_PASSWORD: ${ITA_DB_PASSWORD}
      PLATFORM_API_HOST: ${PLATFORM_API_HOST:-platform-api}
      PLATFORM_API_PORT: ${PLATFORM_API_PORT:-8000}
      CONTAINER_BASE: docker
      STORAGEPATH: /storage/
      LISTEN_PORT: 8000
    volumes:
      - vol-ita-storage:/storage
    networks:
      - exastro
    profiles:
      - all
      - minimal
      - base
      - web
      - ita
    logging: *logging

  ita-web-server:
    image: docker.io/exastro/exastro-it-automation-web-server:${ITA_VERSION:-2.5.1}
    container_name: ita-web-server
    hostname: ita-web-server
    restart: always
    user: ${UID:-1000}:${HOST_DOCKER_GID:-1000}
    environment:
      TZ: ${TZ:-Asia/Tokyo}
      DEFAULT_LANGUAGE: ${DEFAULT_LANGUAGE:-ja}
      LANGUAGE: ${LANGUAGE:-en}
      ENCRYPT_KEY: ${ENCRYPT_KEY}
      APACHE_USERNAME: "#${UID:-1000}"
      APACHE_GROUPNAME: "#${HOST_DOCKER_GID:-1000}"
      DB_VENDOR: ${ITA_DB_VENDOR:-mariadb}
      DB_HOST: ${ITA_DB_HOST:-mariadb}
      DB_PORT: ${ITA_DB_PORT:-3306}
      DB_DATABASE: ${ITA_DB_DATABASE:-ITA_DB}
      DB_ADMIN_USER: ${ITA_DB_ADMIN_USER:-root}
      DB_ADMIN_PASSWORD: ${ITA_DB_ADMIN_PASSWORD}
      DB_USER: ${ITA_DB_USER:-ITA_USER}
      DB_PASSWORD: ${ITA_DB_PASSWORD}
      CONTAINER_BASE: docker
      STORAGEPATH: /storage/
      LISTEN_PORT: 8000
    networks:
      - exastro
    profiles:
      - all
      - minimal
      - base
      - web
      - ita
    logging: *logging

  ita-by-ansible-execute:
    image: docker.io/exastro/exastro-it-automation-by-ansible-execute-onpremises:${ITA_VERSION:-2.5.1}
    container_name: ita-by-ansible-execute
    hostname: ita-by-ansible-execute
    restart: always
    user: ${UID:-1000}:${HOST_DOCKER_GID:-1000}
    environment:
      TZ: ${TZ:-Asia/Tokyo}
      DEFAULT_LANGUAGE: ${DEFAULT_LANGUAGE:-ja}
      LANGUAGE: ${LANGUAGE:-en}
      ENCRYPT_KEY: ${ENCRYPT_KEY}
      EXECUTE_INTERVAL: ${INTERFACE_EXECUTE_INTERVAL:-3}
      ANSIBLE_AGENT_IMAGE: ${ANSIBLE_AGENT_IMAGE:-docker.io/exastro/exastro-it-automation-by-ansible-agent}
      ANSIBLE_AGENT_IMAGE_TAG: ${ANSIBLE_AGENT_IMAGE_TAG:-2.5.1}
      DOCKER_BUILDKIT: 0
      UID: ${UID:-1000}
      HOST_DOCKER_GID: ${HOST_DOCKER_GID:-1000}
      DB_VENDOR: ${ITA_DB_VENDOR:-mariadb}
      DB_HOST: ${ITA_DB_HOST:-mariadb}
      DB_PORT: ${ITA_DB_PORT:-3306}
      DB_DATABASE: ${ITA_DB_DATABASE:-ITA_DB}
      DB_ADMIN_USER: ${ITA_DB_ADMIN_USER:-root}
      DB_ADMIN_PASSWORD: ${ITA_DB_ADMIN_PASSWORD}
      DB_USER: ${ITA_DB_USER:-ITA_USER}
      DB_PASSWORD: ${ITA_DB_PASSWORD}
      GITLAB_PROTOCOL: ${GITLAB_PROTOCOL:-http}
      GITLAB_HOST: ${GITLAB_HOST:-}
      GITLAB_PORT: ${GITLAB_PORT:-40080}
      GITLAB_ROOT_TOKEN: ${GITLAB_ROOT_TOKEN}
      PLATFORM_API_HOST: ${PLATFORM_API_HOST:-platform-api}
      PLATFORM_API_PORT: ${PLATFORM_API_PORT:-8000}
      CONTAINER_BASE: docker
      STORAGEPATH: /storage/
      HOST_STORAGEPATH: ${PWD}/.volumes/storage/
      HTTP_PROXY: ${HTTP_PROXY}
      http_proxy: ${HTTP_PROXY}
      HTTPS_PROXY: ${HTTPS_PROXY}
      https_proxy: ${HTTPS_PROXY}
      NO_PROXY: localhost,127.0.0.1,ita-api-organization,ita-api-admin,ita-web-server,platform-api,platform-auth,gitlab,${NO_PROXY}
      no_proxy: localhost,127.0.0.1,ita-api-organization,ita-api-admin,ita-web-server,platform-api,platform-auth,gitlab,${NO_PROXY}
      NETWORK_ID: ${NETWORK_ID}
    volumes:
      - ${HOST_DOCKER_SOCKET_PATH:-/var/run/docker.sock}:/var/run/docker.sock:cached
      - ./ita_by_ansible_execute/templates:/exastro/templates
      - vol-ita-storage:/storage
    networks:
      - exastro
    depends_on:
      ita-migration:
        condition: service_completed_successfully
    profiles:
      - all
      - minimal
      - base
      - backyard
      - ita
    logging: *logging

  ita-by-ansible-legacy-role-vars-listup:
    image: docker.io/exastro/exastro-it-automation-by-ansible-legacy-role-vars-listup:${ITA_VERSION:-2.5.1}
    container_name: ita-by-ansible-legacy-role-vars-listup
    hostname: ita-by-ansible-legacy-role-vars-listup
    restart: always
    user: ${UID:-1000}:${HOST_DOCKER_GID:-1000}
    environment:
      TZ: ${TZ:-Asia/Tokyo}
      DEFAULT_LANGUAGE: ${DEFAULT_LANGUAGE:-ja}
      LANGUAGE: ${LANGUAGE:-en}
      ENCRYPT_KEY: ${ENCRYPT_KEY}
      EXECUTE_INTERVAL: ${EXECUTE_INTERVAL:-10}
      CONTAINER_BASE: docker
      STORAGEPATH: /storage/
      PLATFORM_API_HOST: ${PLATFORM_API_HOST:-platform-api}
      PLATFORM_API_PORT: ${PLATFORM_API_PORT:-8000}
      DB_VENDOR: ${ITA_DB_VENDOR:-mariadb}
      DB_HOST: ${ITA_DB_HOST:-mariadb}
      DB_PORT: ${ITA_DB_PORT:-3306}
      DB_DATABASE: ${ITA_DB_DATABASE:-ITA_DB}
      DB_ADMIN_USER: ${ITA_DB_ADMIN_USER:-root}
      DB_ADMIN_PASSWORD: ${ITA_DB_ADMIN_PASSWORD}
      DB_USER: ${ITA_DB_USER:-ITA_USER}
      DB_PASSWORD: ${ITA_DB_PASSWORD}
    volumes:
      - vol-ita-storage:/storage
    networks:
      - exastro
    depends_on:
      ita-migration:
        condition: service_completed_successfully
    profiles:
      - all
      - minimal
      - base
      - backyard
      - ita
    logging: *logging

  ita-by-ansible-legacy-vars-listup:
    image: docker.io/exastro/exastro-it-automation-by-ansible-legacy-vars-listup:${ITA_VERSION:-2.5.1}
    container_name: ita-by-ansible-legacy-vars-listup
    hostname: ita-by-ansible-legacy-vars-listup
    restart: always
    user: ${UID:-1000}:${HOST_DOCKER_GID:-1000}
    environment:
      TZ: ${TZ:-Asia/Tokyo}
      DEFAULT_LANGUAGE: ${DEFAULT_LANGUAGE:-ja}
      LANGUAGE: ${LANGUAGE:-en}
      ENCRYPT_KEY: ${ENCRYPT_KEY}
      EXECUTE_INTERVAL: ${EXECUTE_INTERVAL:-10}
      CONTAINER_BASE: docker
      STORAGEPATH: /storage/
      PLATFORM_API_HOST: ${PLATFORM_API_HOST:-platform-api}
      PLATFORM_API_PORT: ${PLATFORM_API_PORT:-8000}
      DB_VENDOR: ${ITA_DB_VENDOR:-mariadb}
      DB_HOST: ${ITA_DB_HOST:-mariadb}
      DB_PORT: ${ITA_DB_PORT:-3306}
      DB_DATABASE: ${ITA_DB_DATABASE:-ITA_DB}
      DB_ADMIN_USER: ${ITA_DB_ADMIN_USER:-root}
      DB_ADMIN_PASSWORD: ${ITA_DB_ADMIN_PASSWORD}
      DB_USER: ${ITA_DB_USER:-ITA_USER}
      DB_PASSWORD: ${ITA_DB_PASSWORD}
    volumes:
      - vol-ita-storage:/storage
    networks:
      - exastro
    depends_on:
      ita-migration:
        condition: service_completed_successfully
    profiles:
      - all
      - minimal
      - base
      - backyard
      - ita
    logging: *logging

  ita-by-ansible-pioneer-vars-listup:
    image: docker.io/exastro/exastro-it-automation-by-ansible-pioneer-vars-listup:${ITA_VERSION:-2.5.1}
    container_name: ita-by-ansible-pioneer-vars-listup
    hostname: ita-by-ansible-pioneer-vars-listup
    restart: always
    user: ${UID:-1000}:${HOST_DOCKER_GID:-1000}
    environment:
      TZ: ${TZ:-Asia/Tokyo}
      DEFAULT_LANGUAGE: ${DEFAULT_LANGUAGE:-ja}
      LANGUAGE: ${LANGUAGE:-en}
      ENCRYPT_KEY: ${ENCRYPT_KEY}
      EXECUTE_INTERVAL: ${EXECUTE_INTERVAL:-10}
      CONTAINER_BASE: docker
      STORAGEPATH: /storage/
      PLATFORM_API_HOST: ${PLATFORM_API_HOST:-platform-api}
      PLATFORM_API_PORT: ${PLATFORM_API_PORT:-8000}
      DB_VENDOR: ${ITA_DB_VENDOR:-mariadb}
      DB_HOST: ${ITA_DB_HOST:-mariadb}
      DB_PORT: ${ITA_DB_PORT:-3306}
      DB_DATABASE: ${ITA_DB_DATABASE:-ITA_DB}
      DB_ADMIN_USER: ${ITA_DB_ADMIN_USER:-root}
      DB_ADMIN_PASSWORD: ${ITA_DB_ADMIN_PASSWORD}
      DB_USER: ${ITA_DB_USER:-ITA_USER}
      DB_PASSWORD: ${ITA_DB_PASSWORD}
    volumes:
      - vol-ita-storage:/storage
    networks:
      - exastro
    depends_on:
      ita-migration:
        condition: service_completed_successfully
    profiles:
      - all
      - minimal
      - base
      - backyard
      - ita
    logging: *logging

  ita-by-ansible-towermaster-sync:
    image: docker.io/exastro/exastro-it-automation-by-ansible-towermaster-sync:${ITA_VERSION:-2.5.1}
    container_name: ita-by-ansible-towermaster-sync
    hostname: ita-by-ansible-towermaster-sync
    restart: always
    user: ${UID:-1000}:${HOST_DOCKER_GID:-1000}
    environment:
      TZ: ${TZ:-Asia/Tokyo}
      DEFAULT_LANGUAGE: ${DEFAULT_LANGUAGE:-ja}
      LANGUAGE: ${LANGUAGE:-en}
      ENCRYPT_KEY: ${ENCRYPT_KEY}
      EXECUTE_INTERVAL: ${EXECUTE_INTERVAL:-10}
      CONTAINER_BASE: docker
      STORAGEPATH: /storage/
      PLATFORM_API_HOST: ${PLATFORM_API_HOST:-platform-api}
      PLATFORM_API_PORT: ${PLATFORM_API_PORT:-8000}
      DB_VENDOR: ${ITA_DB_VENDOR:-mariadb}
      DB_HOST: ${ITA_DB_HOST:-mariadb}
      DB_PORT: ${ITA_DB_PORT:-3306}
      DB_DATABASE: ${ITA_DB_DATABASE:-ITA_DB}
      DB_ADMIN_USER: ${ITA_DB_ADMIN_USER:-root}
      DB_ADMIN_PASSWORD: ${ITA_DB_ADMIN_PASSWORD}
      DB_USER: ${ITA_DB_USER:-ITA_USER}
      DB_PASSWORD: ${ITA_DB_PASSWORD}
    volumes:
      - vol-ita-storage:/storage
    networks:
      - exastro
    depends_on:
      ita-migration:
        condition: service_completed_successfully
    profiles:
      - all
      - minimal
      - base
      - backyard
      - ita
    logging: *logging

  ita-by-collector:
    image: docker.io/exastro/exastro-it-automation-by-collector:${ITA_VERSION:-2.5.1}
    container_name: ita-by-collector
    hostname: ita-by-collector
    restart: always
    user: ${UID:-1000}:${HOST_DOCKER_GID:-1000}
    environment:
      TZ: ${TZ:-Asia/Tokyo}
      DEFAULT_LANGUAGE: ${DEFAULT_LANGUAGE:-ja}
      LANGUAGE: ${LANGUAGE:-en}
      ENCRYPT_KEY: ${ENCRYPT_KEY}
      EXECUTE_INTERVAL: ${EXECUTE_INTERVAL:-10}
      CONTAINER_BASE: docker
      STORAGEPATH: /storage/
      PLATFORM_API_HOST: ${PLATFORM_API_HOST:-platform-api}
      PLATFORM_API_PORT: ${PLATFORM_API_PORT:-8000}
      DB_VENDOR: ${ITA_DB_VENDOR:-mariadb}
      DB_HOST: ${ITA_DB_HOST:-mariadb}
      DB_PORT: ${ITA_DB_PORT:-3306}
      DB_DATABASE: ${ITA_DB_DATABASE:-ITA_DB}
      DB_ADMIN_USER: ${ITA_DB_ADMIN_USER:-root}
      DB_ADMIN_PASSWORD: ${ITA_DB_ADMIN_PASSWORD}
      DB_USER: ${ITA_DB_USER:-ITA_USER}
      DB_PASSWORD: ${ITA_DB_PASSWORD}
    volumes:
      - vol-ita-storage:/storage
    networks:
      - exastro
    depends_on:
      ita-migration:
        condition: service_completed_successfully
    profiles:
      - all
      - minimal
      - base
      - backyard
      - ita
    logging: *logging

  ita-by-conductor-synchronize:
    image: docker.io/exastro/exastro-it-automation-by-conductor-synchronize:${ITA_VERSION:-2.5.1}
    container_name: ita-by-conductor-synchronize
    hostname: ita-by-conductor-synchronize
    restart: always
    user: ${UID:-1000}:${HOST_DOCKER_GID:-1000}
    environment:
      TZ: ${TZ:-Asia/Tokyo}
      DEFAULT_LANGUAGE: ${DEFAULT_LANGUAGE:-ja}
      LANGUAGE: ${LANGUAGE:-en}
      ENCRYPT_KEY: ${ENCRYPT_KEY}
      EXECUTE_INTERVAL: ${INTERFACE_EXECUTE_INTERVAL:-3}
      CONTAINER_BASE: docker
      STORAGEPATH: /storage/
      PLATFORM_API_HOST: ${PLATFORM_API_HOST:-platform-api}
      PLATFORM_API_PORT: ${PLATFORM_API_PORT:-8000}
      DB_VENDOR: ${ITA_DB_VENDOR:-mariadb}
      DB_HOST: ${ITA_DB_HOST:-mariadb}
      DB_PORT: ${ITA_DB_PORT:-3306}
      DB_DATABASE: ${ITA_DB_DATABASE:-ITA_DB}
      DB_ADMIN_USER: ${ITA_DB_ADMIN_USER:-root}
      DB_ADMIN_PASSWORD: ${ITA_DB_ADMIN_PASSWORD}
      DB_USER: ${ITA_DB_USER:-ITA_USER}
      DB_PASSWORD: ${ITA_DB_PASSWORD}
    volumes:
      - vol-ita-storage:/storage
    networks:
      - exastro
    depends_on:
      ita-migration:
        condition: service_completed_successfully
    profiles:
      - all
      - minimal
      - base
      - backyard
      - ita
    logging: *logging

  ita-by-conductor-regularly:
    image: docker.io/exastro/exastro-it-automation-by-conductor-regularly:${ITA_VERSION:-2.5.1}
    container_name: ita-by-conductor-regularly
    hostname: ita-by-conductor-regularly
    restart: always
    user: ${UID:-1000}:${HOST_DOCKER_GID:-1000}
    environment:
      TZ: ${TZ:-Asia/Tokyo}
      DEFAULT_LANGUAGE: ${DEFAULT_LANGUAGE:-ja}
      LANGUAGE: ${LANGUAGE:-en}
      ENCRYPT_KEY: ${ENCRYPT_KEY}
      EXECUTE_INTERVAL: ${EXECUTE_INTERVAL:-10}
      CONTAINER_BASE: docker
      STORAGEPATH: /storage/
      PLATFORM_API_HOST: ${PLATFORM_API_HOST:-platform-api}
      PLATFORM_API_PORT: ${PLATFORM_API_PORT:-8000}
      DB_VENDOR: ${ITA_DB_VENDOR:-mariadb}
      DB_HOST: ${ITA_DB_HOST:-mariadb}
      DB_PORT: ${ITA_DB_PORT:-3306}
      DB_DATABASE: ${ITA_DB_DATABASE:-ITA_DB}
      DB_ADMIN_USER: ${ITA_DB_ADMIN_USER:-root}
      DB_ADMIN_PASSWORD: ${ITA_DB_ADMIN_PASSWORD}
      DB_USER: ${ITA_DB_USER:-ITA_USER}
      DB_PASSWORD: ${ITA_DB_PASSWORD}
    volumes:
      - vol-ita-storage:/storage
    networks:
      - exastro
    depends_on:
      ita-migration:
        condition: service_completed_successfully
    profiles:
      - all
      - minimal
      - base
      - backyard
      - ita
    logging: *logging

  ita-by-menu-create:
    image: docker.io/exastro/exastro-it-automation-by-menu-create:${ITA_VERSION:-2.5.1}
    container_name: ita-by-menu-create
    hostname: ita-by-menu-create
    restart: always
    user: ${UID:-1000}:${HOST_DOCKER_GID:-1000}
    environment:
      TZ: ${TZ:-Asia/Tokyo}
      DEFAULT_LANGUAGE: ${DEFAULT_LANGUAGE:-ja}
      LANGUAGE: ${LANGUAGE:-en}
      ENCRYPT_KEY: ${ENCRYPT_KEY}
      EXECUTE_INTERVAL: ${EXECUTE_INTERVAL:-10}
      CONTAINER_BASE: docker
      STORAGEPATH: /storage/
      PLATFORM_API_HOST: ${PLATFORM_API_HOST:-platform-api}
      PLATFORM_API_PORT: ${PLATFORM_API_PORT:-8000}
      DB_VENDOR: ${ITA_DB_VENDOR:-mariadb}
      DB_HOST: ${ITA_DB_HOST:-mariadb}
      DB_PORT: ${ITA_DB_PORT:-3306}
      DB_DATABASE: ${ITA_DB_DATABASE:-ITA_DB}
      DB_ADMIN_USER: ${ITA_DB_ADMIN_USER:-root}
      DB_ADMIN_PASSWORD: ${ITA_DB_ADMIN_PASSWORD}
      DB_USER: ${ITA_DB_USER:-ITA_USER}
      DB_PASSWORD: ${ITA_DB_PASSWORD}
    volumes:
      - vol-ita-storage:/storage
    networks:
      - exastro
    depends_on:
      ita-migration:
        condition: service_completed_successfully
    profiles:
      - all
      - minimal
      - base
      - backyard
      - ita
    logging: *logging

  ita-by-menu-export-import:
    image: docker.io/exastro/exastro-it-automation-by-menu-export-import:${ITA_VERSION:-2.5.1}
    container_name: ita-by-menu-export-import
    hostname: ita-by-menu-export-import
    restart: always
    user: ${UID:-1000}:${HOST_DOCKER_GID:-1000}
    environment:
      TZ: ${TZ:-Asia/Tokyo}
      DEFAULT_LANGUAGE: ${DEFAULT_LANGUAGE:-ja}
      LANGUAGE: ${LANGUAGE:-en}
      ENCRYPT_KEY: ${ENCRYPT_KEY}
      EXECUTE_INTERVAL: ${EXECUTE_INTERVAL:-10}
      CONTAINER_BASE: docker
      STORAGEPATH: /storage/
      PLATFORM_API_HOST: ${PLATFORM_API_HOST:-platform-api}
      PLATFORM_API_PORT: ${PLATFORM_API_PORT:-8000}
      DB_VENDOR: ${ITA_DB_VENDOR:-mariadb}
      DB_HOST: ${ITA_DB_HOST:-mariadb}
      DB_PORT: ${ITA_DB_PORT:-3306}
      DB_DATABASE: ${ITA_DB_DATABASE:-ITA_DB}
      DB_ADMIN_USER: ${ITA_DB_ADMIN_USER:-root}
      DB_ADMIN_PASSWORD: ${ITA_DB_ADMIN_PASSWORD}
      DB_USER: ${ITA_DB_USER:-ITA_USER}
      DB_PASSWORD: ${ITA_DB_PASSWORD}
    volumes:
      - vol-ita-storage:/storage
    networks:
      - exastro
    depends_on:
      ita-migration:
        condition: service_completed_successfully
    profiles:
      - all
      - minimal
      - base
      - backyard
      - ita
    logging: *logging

  ita-by-excel-export-import:
    image: docker.io/exastro/exastro-it-automation-by-excel-export-import:${ITA_VERSION:-2.5.1}
    container_name: ita-by-excel-export-import
    hostname: ita-by-excel-export-import
    restart: always
    user: ${UID:-1000}:${HOST_DOCKER_GID:-1000}
    environment:
      TZ: ${TZ:-Asia/Tokyo}
      DEFAULT_LANGUAGE: ${DEFAULT_LANGUAGE:-ja}
      LANGUAGE: ${LANGUAGE:-en}
      ENCRYPT_KEY: ${ENCRYPT_KEY}
      EXECUTE_INTERVAL: ${EXECUTE_INTERVAL:-10}
      CONTAINER_BASE: docker
      STORAGEPATH: /storage/
      PLATFORM_API_HOST: ${PLATFORM_API_HOST:-platform-api}
      PLATFORM_API_PORT: ${PLATFORM_API_PORT:-8000}
      DB_VENDOR: ${ITA_DB_VENDOR:-mariadb}
      DB_HOST: ${ITA_DB_HOST:-mariadb}
      DB_PORT: ${ITA_DB_PORT:-3306}
      DB_DATABASE: ${ITA_DB_DATABASE:-ITA_DB}
      DB_ADMIN_USER: ${ITA_DB_ADMIN_USER:-root}
      DB_ADMIN_PASSWORD: ${ITA_DB_ADMIN_PASSWORD}
      DB_USER: ${ITA_DB_USER:-ITA_USER}
      DB_PASSWORD: ${ITA_DB_PASSWORD}
    volumes:
      - vol-ita-storage:/storage
    networks:
      - exastro
    depends_on:
      ita-migration:
        condition: service_completed_successfully
    profiles:
      - all
      - minimal
      - base
      - backyard
      - ita
    logging: *logging

  ita-by-terraform-cloud-ep-execute:
    image: docker.io/exastro/exastro-it-automation-by-terraform-cloud-ep-execute:${ITA_VERSION:-2.5.1}
    container_name: ita-by-terraform-cloud-ep-execute
    hostname: ita-by-terraform-cloud-ep-execute
    restart: always
    user: ${UID:-1000}:${HOST_DOCKER_GID:-1000}
    environment:
      TZ: ${TZ:-Asia/Tokyo}
      DEFAULT_LANGUAGE: ${DEFAULT_LANGUAGE:-ja}
      LANGUAGE: ${LANGUAGE:-en}
      ENCRYPT_KEY: ${ENCRYPT_KEY}
      EXECUTE_INTERVAL: ${INTERFACE_EXECUTE_INTERVAL:-3}
      CONTAINER_BASE: docker
      STORAGEPATH: /storage/
      PLATFORM_API_HOST: ${PLATFORM_API_HOST:-platform-api}
      PLATFORM_API_PORT: ${PLATFORM_API_PORT:-8000}
      DB_VENDOR: ${ITA_DB_VENDOR:-mariadb}
      DB_HOST: ${ITA_DB_HOST:-mariadb}
      DB_PORT: ${ITA_DB_PORT:-3306}
      DB_DATABASE: ${ITA_DB_DATABASE:-ITA_DB}
      DB_ADMIN_USER: ${ITA_DB_ADMIN_USER:-root}
      DB_ADMIN_PASSWORD: ${ITA_DB_ADMIN_PASSWORD}
      DB_USER: ${ITA_DB_USER:-ITA_USER}
      DB_PASSWORD: ${ITA_DB_PASSWORD}
    volumes:
      - vol-ita-storage:/storage
    networks:
      - exastro
    depends_on:
      ita-migration:
        condition: service_completed_successfully
    profiles:
      - all
      - minimal
      - base
      - backyard
      - ita
    logging: *logging

  ita-by-terraform-cloud-ep-vars-listup:
    image: docker.io/exastro/exastro-it-automation-by-terraform-cloud-ep-vars-listup:${ITA_VERSION:-2.5.1}
    container_name: ita-by-terraform-cloud-ep-vars-listup
    hostname: ita-by-terraform-cloud-ep-vars-listup
    restart: always
    user: ${UID:-1000}:${HOST_DOCKER_GID:-1000}
    environment:
      TZ: ${TZ:-Asia/Tokyo}
      DEFAULT_LANGUAGE: ${DEFAULT_LANGUAGE:-ja}
      LANGUAGE: ${LANGUAGE:-en}
      ENCRYPT_KEY: ${ENCRYPT_KEY}
      EXECUTE_INTERVAL: ${EXECUTE_INTERVAL:-10}
      CONTAINER_BASE: docker
      STORAGEPATH: /storage/
      PLATFORM_API_HOST: ${PLATFORM_API_HOST:-platform-api}
      PLATFORM_API_PORT: ${PLATFORM_API_PORT:-8000}
      DB_VENDOR: ${ITA_DB_VENDOR:-mariadb}
      DB_HOST: ${ITA_DB_HOST:-mariadb}
      DB_PORT: ${ITA_DB_PORT:-3306}
      DB_DATABASE: ${ITA_DB_DATABASE:-ITA_DB}
      DB_ADMIN_USER: ${ITA_DB_ADMIN_USER:-root}
      DB_ADMIN_PASSWORD: ${ITA_DB_ADMIN_PASSWORD}
      DB_USER: ${ITA_DB_USER:-ITA_USER}
      DB_PASSWORD: ${ITA_DB_PASSWORD}
    volumes:
      - vol-ita-storage:/storage
    networks:
      - exastro
    depends_on:
      ita-migration:
        condition: service_completed_successfully
    profiles:
      - all
      - minimal
      - base
      - backyard
      - ita
    logging: *logging

  ita-by-terraform-cli-execute:
    image: docker.io/exastro/exastro-it-automation-by-terraform-cli-execute:${ITA_VERSION:-2.5.1}
    container_name: ita-by-terraform-cli-execute
    hostname: ita-by-terraform-cli-execute
    restart: always
    user: ${UID:-1000}:${HOST_DOCKER_GID:-1000}
    environment:
      TZ: ${TZ:-Asia/Tokyo}
      DEFAULT_LANGUAGE: ${DEFAULT_LANGUAGE:-ja}
      LANGUAGE: ${LANGUAGE:-en}
      ENCRYPT_KEY: ${ENCRYPT_KEY}
      EXECUTE_INTERVAL: ${INTERFACE_EXECUTE_INTERVAL:-3}
      CONTAINER_BASE: docker
      STORAGEPATH: /storage/
      PLATFORM_API_HOST: ${PLATFORM_API_HOST:-platform-api}
      PLATFORM_API_PORT: ${PLATFORM_API_PORT:-8000}
      DB_VENDOR: ${ITA_DB_VENDOR:-mariadb}
      DB_HOST: ${ITA_DB_HOST:-mariadb}
      DB_PORT: ${ITA_DB_PORT:-3306}
      DB_DATABASE: ${ITA_DB_DATABASE:-ITA_DB}
      DB_ADMIN_USER: ${ITA_DB_ADMIN_USER:-root}
      DB_ADMIN_PASSWORD: ${ITA_DB_ADMIN_PASSWORD}
      DB_USER: ${ITA_DB_USER:-ITA_USER}
      DB_PASSWORD: ${ITA_DB_PASSWORD}
    volumes:
      - vol-ita-storage:/storage
    networks:
      - exastro
    depends_on:
      ita-migration:
        condition: service_completed_successfully
    profiles:
      - all
      - minimal
      - base
      - backyard
      - ita
    logging: *logging

  ita-by-terraform-cli-vars-listup:
    image: docker.io/exastro/exastro-it-automation-by-terraform-cli-vars-listup:${ITA_VERSION:-2.5.1}
    container_name: ita-by-terraform-cli-vars-listup
    hostname: ita-by-terraform-cli-vars-listup
    restart: always
    user: ${UID:-1000}:${HOST_DOCKER_GID:-1000}
    environment:
      TZ: ${TZ:-Asia/Tokyo}
      DEFAULT_LANGUAGE: ${DEFAULT_LANGUAGE:-ja}
      LANGUAGE: ${LANGUAGE:-en}
      ENCRYPT_KEY: ${ENCRYPT_KEY}
      EXECUTE_INTERVAL: ${EXECUTE_INTERVAL:-10}
      CONTAINER_BASE: docker
      STORAGEPATH: /storage/
      PLATFORM_API_HOST: ${PLATFORM_API_HOST:-platform-api}
      PLATFORM_API_PORT: ${PLATFORM_API_PORT:-8000}
      DB_VENDOR: ${ITA_DB_VENDOR:-mariadb}
      DB_HOST: ${ITA_DB_HOST:-mariadb}
      DB_PORT: ${ITA_DB_PORT:-3306}
      DB_DATABASE: ${ITA_DB_DATABASE:-ITA_DB}
      DB_ADMIN_USER: ${ITA_DB_ADMIN_USER:-root}
      DB_ADMIN_PASSWORD: ${ITA_DB_ADMIN_PASSWORD}
      DB_USER: ${ITA_DB_USER:-ITA_USER}
      DB_PASSWORD: ${ITA_DB_PASSWORD}
    volumes:
      - vol-ita-storage:/storage
    networks:
      - exastro
    depends_on:
      ita-migration:
        condition: service_completed_successfully
    profiles:
      - all
      - minimal
      - base
      - backyard
      - ita
    logging: *logging

  ita-by-hostgroup-split:
    image: docker.io/exastro/exastro-it-automation-by-hostgroup-split:${ITA_VERSION:-2.5.1}
    container_name: ita-by-hostgroup-split
    hostname: ita-by-hostgroup-split
    restart: always
    user: ${UID:-1000}:${HOST_DOCKER_GID:-1000}
    environment:
      TZ: ${TZ:-Asia/Tokyo}
      DEFAULT_LANGUAGE: ${DEFAULT_LANGUAGE:-ja}
      LANGUAGE: ${LANGUAGE:-en}
      ENCRYPT_KEY: ${ENCRYPT_KEY}
      EXECUTE_INTERVAL: ${EXECUTE_INTERVAL:-10}
      CONTAINER_BASE: docker
      STORAGEPATH: /storage/
      PLATFORM_API_HOST: ${PLATFORM_API_HOST:-platform-api}
      PLATFORM_API_PORT: ${PLATFORM_API_PORT:-8000}
      DB_VENDOR: ${ITA_DB_VENDOR:-mariadb}
      DB_HOST: ${ITA_DB_HOST:-mariadb}
      DB_PORT: ${ITA_DB_PORT:-3306}
      DB_DATABASE: ${ITA_DB_DATABASE:-ITA_DB}
      DB_ADMIN_USER: ${ITA_DB_ADMIN_USER:-root}
      DB_ADMIN_PASSWORD: ${ITA_DB_ADMIN_PASSWORD}
      DB_USER: ${ITA_DB_USER:-ITA_USER}
      DB_PASSWORD: ${ITA_DB_PASSWORD}
    volumes:
      - vol-ita-storage:/storage
    networks:
      - exastro
    depends_on:
      ita-migration:
        condition: service_completed_successfully
    profiles:
      - all
      - minimal
      - base
      - backyard
      - ita
    logging: *logging

  ita-by-cicd-for-iac:
    image: docker.io/exastro/exastro-it-automation-by-cicd-for-iac:${ITA_VERSION:-2.5.1}
    container_name: ita-by-cicd-for-iac
    hostname: ita-by-cicd-for-iac
    restart: always
    user: ${UID:-1000}:${HOST_DOCKER_GID:-1000}
    environment:
      TZ: ${TZ:-Asia/Tokyo}
      DEFAULT_LANGUAGE: ${DEFAULT_LANGUAGE:-ja}
      LANGUAGE: ${LANGUAGE:-en}
      ENCRYPT_KEY: ${ENCRYPT_KEY}
      EXECUTE_INTERVAL: ${EXECUTE_INTERVAL:-10}
      CONTAINER_BASE: docker
      STORAGEPATH: /storage/
      PLATFORM_API_HOST: ${PLATFORM_API_HOST:-platform-api}
      PLATFORM_API_PORT: ${PLATFORM_API_PORT:-8000}
      DB_VENDOR: ${ITA_DB_VENDOR:-mariadb}
      DB_HOST: ${ITA_DB_HOST:-mariadb}
      DB_PORT: ${ITA_DB_PORT:-3306}
      DB_DATABASE: ${ITA_DB_DATABASE:-ITA_DB}
      DB_ADMIN_USER: ${ITA_DB_ADMIN_USER:-root}
      DB_ADMIN_PASSWORD: ${ITA_DB_ADMIN_PASSWORD}
      DB_USER: ${ITA_DB_USER:-ITA_USER}
      DB_PASSWORD: ${ITA_DB_PASSWORD}
    volumes:
      - vol-ita-storage:/storage
    networks:
      - exastro
    depends_on:
      ita-migration:
        condition: service_completed_successfully
    profiles:
      - all
      - minimal
      - base
      - backyard
      - ita
    logging: *logging

  ita-by-oase-conclusion:
    image: docker.io/exastro/exastro-it-automation-by-oase-conclusion:${ITA_VERSION:-2.5.1}
    container_name: ita-by-oase-conclusion
    hostname: ita-by-oase-conclusion
    restart: always
    user: ${UID:-1000}:${HOST_DOCKER_GID:-1000}
    environment:
      TZ: ${TZ:-Asia/Tokyo}
      DEFAULT_LANGUAGE: ${DEFAULT_LANGUAGE:-ja}
      LANGUAGE: ${LANGUAGE:-en}
      ENCRYPT_KEY: ${ENCRYPT_KEY}
      EXECUTE_INTERVAL: ${EXECUTE_INTERVAL:-10}
      CONTAINER_BASE: docker
      STORAGEPATH: /storage/
      PLATFORM_API_HOST: ${PLATFORM_API_HOST:-platform-api}
      PLATFORM_API_PORT: ${PLATFORM_API_PORT:-8000}
      DB_VENDOR: ${ITA_DB_VENDOR:-mariadb}
      DB_HOST: ${ITA_DB_HOST:-mariadb}
      DB_PORT: ${ITA_DB_PORT:-3306}
      DB_DATABASE: ${ITA_DB_DATABASE:-ITA_DB}
      DB_ADMIN_USER: ${ITA_DB_ADMIN_USER:-root}
      DB_ADMIN_PASSWORD: ${ITA_DB_ADMIN_PASSWORD}
      DB_USER: ${ITA_DB_USER:-ITA_USER}
      DB_PASSWORD: ${ITA_DB_PASSWORD}
      MONGO_OPTION_SSL: ${MONGO_OPTION_SSL:-FALSE}
      MONGO_SCHEME: ${MONGO_SCHEME:-mongodb}
      MONGO_HOST: ${MONGO_HOST}
      MONGO_PORT: ${MONGO_PORT:-27017}
    volumes:
      - vol-ita-storage:/storage
    networks:
      - exastro
    depends_on:
      ita-migration:
        condition: service_completed_successfully
    profiles:
      - all
      - backyard
      - oase
    logging: *logging

  ita-by-execinstance-dataautoclean:
    image: docker.io/exastro/exastro-it-automation-by-execinstance-dataautoclean:${ITA_VERSION:-2.5.1}
    container_name: ita-by-execinstance-dataautoclean
    hostname: ita-by-execinstance-dataautoclean
    restart: "no"
    user: ${UID:-1000}:${HOST_DOCKER_GID:-1000}
    environment:
      TZ: ${TZ:-Asia/Tokyo}
      DEFAULT_LANGUAGE: ${DEFAULT_LANGUAGE:-ja}
      LANGUAGE: ${LANGUAGE:-en}
      ENCRYPT_KEY: ${ENCRYPT_KEY}
      EXECUTE_INTERVAL: ${EXECUTE_INTERVAL:-10}
      CONTAINER_BASE: docker
      STORAGEPATH: /storage/
      PLATFORM_API_HOST: ${PLATFORM_API_HOST:-platform-api}
      PLATFORM_API_PORT: ${PLATFORM_API_PORT:-8000}
      DB_VENDOR: ${ITA_DB_VENDOR:-mariadb}
      DB_HOST: ${ITA_DB_HOST:-mariadb}
      DB_PORT: ${ITA_DB_PORT:-3306}
      DB_DATABASE: ${ITA_DB_DATABASE:-ITA_DB}
      DB_ADMIN_USER: ${ITA_DB_ADMIN_USER:-root}
      DB_ADMIN_PASSWORD: ${ITA_DB_ADMIN_PASSWORD}
      DB_USER: ${ITA_DB_USER:-ITA_USER}
      DB_PASSWORD: ${ITA_DB_PASSWORD}
    volumes:
      - vol-ita-storage:/storage
    networks:
      - exastro
    profiles:
      - batch
    logging: *logging

  ita-by-file-autoclean:
    image: docker.io/exastro/exastro-it-automation-by-file-autoclean:${ITA_VERSION:-2.5.1}
    container_name: ita-by-file-autoclean
    hostname: ita-by-file-autoclean
    restart: "no"
    user: ${UID:-1000}:${HOST_DOCKER_GID:-1000}
    environment:
      TZ: ${TZ:-Asia/Tokyo}
      DEFAULT_LANGUAGE: ${DEFAULT_LANGUAGE:-ja}
      LANGUAGE: ${LANGUAGE:-en}
      ENCRYPT_KEY: ${ENCRYPT_KEY}
      EXECUTE_INTERVAL: ${EXECUTE_INTERVAL:-10}
      CONTAINER_BASE: docker
      STORAGEPATH: /storage/
      PLATFORM_API_HOST: ${PLATFORM_API_HOST:-platform-api}
      PLATFORM_API_PORT: ${PLATFORM_API_PORT:-8000}
      DB_VENDOR: ${ITA_DB_VENDOR:-mariadb}
      DB_HOST: ${ITA_DB_HOST:-mariadb}
      DB_PORT: ${ITA_DB_PORT:-3306}
      DB_DATABASE: ${ITA_DB_DATABASE:-ITA_DB}
      DB_ADMIN_USER: ${ITA_DB_ADMIN_USER:-root}
      DB_ADMIN_PASSWORD: ${ITA_DB_ADMIN_PASSWORD}
      DB_USER: ${ITA_DB_USER:-ITA_USER}
      DB_PASSWORD: ${ITA_DB_PASSWORD}
    volumes:
      - vol-ita-storage:/storage
    networks:
      - exastro
    profiles:
      - batch
    logging: *logging

  ita-migration:
    image: docker.io/exastro/exastro-it-automation-migration:${ITA_VERSION:-2.5.1}
    container_name: ita-migration
    hostname: ita-migration
    command: python3 /exastro/migration_main.py
    user: ${UID:-1000}:${HOST_DOCKER_GID:-1000}
    environment:
      ORG_ANSIBLE_EXECUTION_LIMIT_DEFAULT: ${ORG_ANSIBLE_EXECUTION_LIMIT_DEFAULT:-25}
      ORG_ANSIBLE_EXECUTION_LIMIT_MAX: ${ORG_ANSIBLE_EXECUTION_LIMIT_MAX:-1000}
      ORG_ANSIBLE_EXECUTION_LIMIT_DESCRIPTION: "${ORG_ANSIBLE_EXECUTION_LIMIT_DESCRIPTION:-Maximum number of movement executions for organization default}"
      ORG_COMMON_UPLOAD_FILE_LIMIT_DEFAULT: ${ORG_COMMON_UPLOAD_FILE_LIMIT_DEFAULT:-104857600}
      ORG_COMMON_UPLOAD_FILE_LIMIT_MAX: ${ORG_COMMON_UPLOAD_FILE_LIMIT_MAX:-107374182400}
      ORG_COMMON_UPLOAD_FILE_LIMIT_DESCRIPTION: "${ORG_COMMON_UPLOAD_FILE_LIMIT_DESCRIPTION:-Maximum byte size of upload file for organization default}"
      SYSTEM_ANSIBLE_EXECUTION_LIMIT: ${SYSTEM_ANSIBLE_EXECUTION_LIMIT:-25}
      SYSTEM_ANSIBLE_EXECUTION_LIMIT_DESCRIPTION: 'Maximum number of movement executions for whole of IT automation'
      CONTAINER_BASE: docker
      TZ: ${TZ:-Asia/Tokyo}
      DEFAULT_LANGUAGE: ${DEFAULT_LANGUAGE:-ja}
      LANGUAGE: ${LANGUAGE:-en}
      ENCRYPT_KEY: ${ENCRYPT_KEY}
      GITLAB_HOST: ${GITLAB_HOST:-}
      GITLAB_PORT: ${GITLAB_PORT:-40080}
      GITLAB_PROTOCOL: ${GITLAB_PROTOCOL:-http}
      GITLAB_ROOT_TOKEN: ${GITLAB_ROOT_TOKEN}
      STORAGEPATH: /storage/
      PLATFORM_API_HOST: ${PLATFORM_API_HOST:-platform-api}
      PLATFORM_API_PORT: ${PLATFORM_API_PORT:-8000}
      DB_VENDOR: ${ITA_DB_VENDOR:-mariadb}
      DB_HOST: ${ITA_DB_HOST:-mariadb}
      DB_PORT: ${ITA_DB_PORT:-3306}
      DB_DATABASE: ${ITA_DB_DATABASE:-ITA_DB}
      DB_ADMIN_USER: ${ITA_DB_ADMIN_USER:-root}
      DB_ADMIN_PASSWORD: ${ITA_DB_ADMIN_PASSWORD}
      DB_USER: ${ITA_DB_USER:-ITA_USER}
      DB_PASSWORD: ${ITA_DB_PASSWORD}
      MONGO_OPTION_SSL: ${MONGO_OPTION_SSL:-FALSE}
      MONGO_SCHEME: ${MONGO_SCHEME:-mongodb}
      MONGO_HOST: ${MONGO_HOST}
      MONGO_PORT: ${MONGO_PORT:-27017}
    volumes:
      - vol-ita-storage:/storage:rw
    networks:
      - exastro
    depends_on:
      # ita-mariadb:
      #   condition: service_healthy
      platform-api:
        condition: service_healthy
      platform-migration-2:
        condition: service_completed_successfully
    profiles:
      - all
      - minimal
      - base
      - migration
      - ita
    logging: *logging

volumes:
  vol-mariadb-data:
    driver: local
    driver_opts:
      type: 'none'
      o: 'bind'
      device: ${PWD}/.volumes/mariadb/data
  vol-gitlab-config:
    driver: local
    driver_opts:
      type: 'none'
      o: 'bind'
      device: ${PWD}/.volumes/gitlab/config
  vol-gitlab-logs:
    driver: local
    driver_opts:
      type: 'none'
      o: 'bind'
      device: ${PWD}/.volumes/gitlab/logs
  vol-gitlab-data:
    driver: local
    driver_opts:
      type: 'none'
      o: 'bind'
      device: ${PWD}/.volumes/gitlab/data
  vol-ita-storage:
    driver: local
    driver_opts:
      type: 'none'
      o: 'bind'
      device: ${PWD}/.volumes/storage
  vol-mongo-data:
    driver: local
    driver_opts:
      type: 'none'
      o: 'bind'
      device: ${PWD}/.volumes/mongo/data
  vol-exastro-log:
    driver: local
    driver_opts:
      type: 'none'
      o: 'bind'
      device: ${PWD}/.volumes/exastro/log
  vol-exastro-ssl:
    driver: local
    driver_opts:
      type: 'none'
      o: 'bind'
      device: ${PWD}/.volumes/exastro/ssl
networks:
  exastro:
    name: "exastro_${NETWORK_ID}"
